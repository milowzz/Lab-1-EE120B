#include <iostream>
#include <cstdlib> // for atoi
#include <string>
using namespace std;

// Function to convert an unsigned char to a binary string
char* cptrCharToBinary(const unsigned char arg_one) {
    unsigned char copy_arg_one = arg_one;
    static char binary[9]; 
    binary[8] = '\0'; // Null terminator

    for (int i = 7; i >= 0; --i) {
        binary[i] = (copy_arg_one % 2) + '0'; // 48 in ASCII is '0', so it is either 48 + 0 = '0' 0r 48 + 1 = '1'
        copy_arg_one /= 2; // Shift bits right
    }

    return binary;
}

char cCharHexSelector(const unsigned char arg_one, const unsigned char arg_two){

   char* binary_func_two = cptrCharToBinary(arg_one);
   int result = 0; 
   int result_case2 = 0;
   int counter = 1;
  


 switch (arg_two) {
        case 0:
            for (int i = 4; i <= 7; i++) {
                if(binary_func_two[i] % 2 == 0){
                    result = result * 10 + 0;
                }
                else if(binary_func_two[i] % 2 == 1){
                    result = result * 10 + 1;
                }
            }
            
            
            cout << "Lower 4 bits of " << static_cast<int>(arg_one) << ": " << result << endl;
            return result;
        case 1:
            for (int j = 0; j <= 3; j++) {
                 cout << "testing: " << counter << endl;
                if(binary_func_two[j] % 2 == 0){
                    result_case2+= counter * 0;
                }
                else if(binary_func_two[j] % 2 == 1){
                    result_case2+= counter * 1;
                    cout << "hi: " << result_case2 << endl;
                }
                
                    if(counter > 8){
                    counter = 1;
                    }
                        else{
                        counter *= 2;
                        }
           
                
            }
            
            
            cout << "Upper 4 bits of " << static_cast<int>(arg_one) << ": " << result_case2 << endl;
            return 'B';

        default:
            cout << "Invalid option. Please select a number between 1 and 3." << endl;
            return 'C';
}

}
    

char cIntHexSelector(const unsigned int, const unsigned char);


int main(int argc, char *argv[]) {
  if (argc != 3) { // Expecting exactly 2 arguments (put 5 in if statement for four arguments)
        cout << "Insufficient amount of arguments " << argv[0] << endl;
        return 1;
    }

    //output 1st argument
    cout << "1st Argument : " << atoi(argv[1]) << endl;
    //change it from a string into an int and save it in a char (yes this is possible idk how)
    unsigned char arg_one = atoi(argv[1]);
    
    //output the conversion pt 1
    cout << atoi(argv[1]) << " in binary: ";

    //store the next argument
     unsigned char arg_two = atoi(argv[2]);

    // Get the binary representation of the unsigned char
     char* binaryString = cptrCharToBinary(arg_one);

    //output the conversion pt 2
    cout << binaryString << endl;

    //now we chnage the char* into an int and store into a unsigned char again for the second part
   
    //call second function
    char temp = cCharHexSelector(arg_one, arg_two);
    cout << temp << endl;



    return 0;
}
